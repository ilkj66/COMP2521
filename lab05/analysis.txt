
NOTE:
- Your time complexities should be expressed in big-O notation and be in
  terms of n, where n is the number of people who  have  been  added  to
  Friendbook.

===============
   FbFriend
===============

- Worst case time complexity: O(n)

- Explanation: Traverse their friends list until find the proper position to
 insert, so the worst case is O(n + n) = O(n)

===============
 FbNumFriends
===============

- Worst case time complexity: O(n)

- Explanation: The worst case is that, all people in friendbok are his/her friends.

===============
FbMutualFriends
===============

- Worst case time complexity: O(n)

- Explanation: There are one time traversal, O(n + n) = O(n)

===============
 FbFriendRecs1
===============

- Worst case time complexity: O(n^2)

- Explanation: When checking the mutual friends number, the time complexity is 
 O(n * n) for the worst case.

